name: Build, Train, Push, and Deploy to EC2

on:
  push:
    branches:
      - main

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}

jobs:
  build-train-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v2

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 📦 Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: 📊 Run training and log to MLflow
      run: |
        python src/train.py

    - name: 🔐 Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: 🐳 Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/ecommerce-streamlit:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-streamlit:latest

    - name: 📡 SSH to EC2 and Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          echo "🔁 Pulling latest image..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/ecommerce-streamlit:latest

          echo "🛑 Stopping existing container on port 8501 (if any)..."
          docker ps -q --filter "publish=8501" | grep -q . && docker stop $(docker ps -q --filter "publish=8501") || echo "No container running on 8501"

          echo "🧹 Removing old containers..."
          docker container prune -f

          echo "🧼 Removing unused images to free space..."
          docker image prune -af

          echo "📦 Pruning unused volumes..."
          docker volume prune -f

          echo "🚀 Running updated container..."
          docker run -d -p 8501:8501 --name ecommerce-app ${{ secrets.DOCKER_USERNAME }}/ecommerce-streamlit:latest
